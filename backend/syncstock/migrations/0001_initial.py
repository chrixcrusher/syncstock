# Generated by Django 5.0.7 on 2024-08-18 17:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('company_code', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('company_email', models.EmailField(max_length=254, unique=True)),
                ('company_address', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('stock_levels', 'Stock Levels'), ('adjustment_reports', 'Stock Adjustments')], max_length=20)),
                ('generated_date', models.DateField()),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('category_image', models.ImageField(blank=True, null=True, upload_to='category_images/')),
                ('company', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='syncstock.company')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='syncstock.company')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('person_in_charge', models.CharField(blank=True, max_length=255, null=True)),
                ('google_maps_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('company', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='syncstock.company')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=255)),
                ('sku', models.CharField(max_length=50)),
                ('product_code', models.CharField(blank=True, max_length=100)),
                ('supplier_name', models.CharField(blank=True, max_length=255)),
                ('additional_description', models.TextField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('inventory_date', models.DateField()),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('category', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='syncstock.category')),
                ('company', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='syncstock.company')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='syncstock.location')),
            ],
        ),
        migrations.CreateModel(
            name='StockAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjustment_type', models.CharField(choices=[('remove', 'Remove'), ('missing', 'Missing'), ('damage', 'Damage'), ('expired', 'Expired'), ('sold', 'Sold'), ('transfer', 'Transfer')], max_length=10)),
                ('quantity', models.IntegerField()),
                ('date', models.DateField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('sku', models.CharField(editable=False, max_length=50)),
                ('product_code', models.CharField(default='piece', editable=False, max_length=100)),
                ('company', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='syncstock.company')),
                ('item', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='syncstock.inventoryitem')),
                ('location', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='syncstock.location')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='StockTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('date', models.DateField()),
                ('sku', models.CharField(blank=True, max_length=50, null=True)),
                ('product_code', models.CharField(blank=True, max_length=100, null=True)),
                ('supplier_name', models.CharField(blank=True, max_length=25, null=True)),
                ('additional_description', models.TextField(blank=True, max_length=255, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='syncstock.category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='syncstock.company')),
                ('from_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_from', to='syncstock.location')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='syncstock.inventoryitem')),
                ('to_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_to', to='syncstock.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TotalCurrentInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=255)),
                ('product_code', models.CharField(max_length=255)),
                ('total_current_inventory', models.PositiveIntegerField()),
                ('sku', models.CharField(default='piece', max_length=50)),
                ('category', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='syncstock.category')),
                ('company', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='syncstock.company')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='syncstock.location')),
            ],
            options={
                'unique_together': {('company', 'item_name', 'product_code', 'sku', 'location')},
            },
        ),
    ]
